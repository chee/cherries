---
import type {CollectionEntry} from "astro:content"
import {toTimeZoneName, toString} from "../../time.ts"

type Props = CollectionEntry<EntryCollectionName>["data"] & {
	id: string
}
const {id, date} = Astro.props

const DEFAULT_TIMEZONE = "Europe/London"
const DEFAULT_DATE_LOCALE = "en-CA"

const timezone =
	"timezone" in Astro.props
		? Astro.props.timezone || DEFAULT_TIMEZONE
		: DEFAULT_TIMEZONE

const dateLocale =
	"dateLocale" in Astro.props
		? Astro.props.dateLocale || DEFAULT_DATE_LOCALE
		: DEFAULT_DATE_LOCALE
---

<div class="entry-bar full-width">
	<a href={"/" + id} rel="bookmark" class="url u-url">
		<time class="dt-published" datetime={date.toISOString()}>
			{toString(date, dateLocale, timezone)}
		</time>
		<span class="entry-bar__timezone entry-bar__timezone--long">
			{toTimeZoneName(date, dateLocale, timezone)}
		</span>
		<span class="entry-bar__timezone entry-bar__timezone--short">
			{toTimeZoneName(date, "en-ca", timezone, "short")}
		</span>
	</a>
</div>

<style>
	.entry-bar {
		background: var(--entry-bar-fill);
		color: var(--entry-bar-line);
		padding: 0 var(--padding-inline);
		font-family: var(--entry-bar-family);
		margin-top: var(--escape-top);
		justify-content: center;
		text-align: center;
	}

	.entry-bar a {
		text-decoration: none;
		color: var(--entry-bar-line);
		font-size: 14px;
		line-height: 2.2em;
	}

	.entry-bar__timezone {
		font-size: 11px;
		white-space: nowrap;
	}

	.entry-bar__timezone--long {
		display: inline;
	}
	.entry-bar__timezone--short {
		display: none;
	}

	@media (max-width: 600px) {
		.entry-bar__timezone--long {
			display: none;
		}
		.entry-bar__timezone--short {
			display: inline;
		}
	}
</style>
