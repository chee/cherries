---
import getEntries, {byRecency} from "../../../../entries.ts"
import EntryListLayout from "../../../../layouts/entry-list-layout.astro"
import paginateNaturally from "../../../../paginate-naturally.ts"

export async function getStaticPaths() {
	const entries = (await getEntries()).toSorted(byRecency)
	const yearByMonth = entries.reduce(
		(a, b) => {
			const date = b.data.date
			const year = date.getFullYear()
			const month = date.getMonth() + 1
			a[year] ||= []
			if (!a[year].includes(month)) {
				a[year].push(month)
			}
			return a
		},
		{} as {[year: number]: number[]}
	)
	return Object.entries(yearByMonth).flatMap(([a, months]) => {
		const year = +a
		return months.flatMap(month => {
			const filtered = entries.filter(entry => {
				return (
					entry.data.date.getMonth() + 1 === month &&
					entry.data.date.getFullYear() == year
				)
			})
			return paginateNaturally(filtered, {
				params: {year: year.toString(), month: month.toString()},
			})
		})
	})
}

export const paths = await getStaticPaths()

const {month, year} = Astro.params
const monthName = new Date(2001, +month - 1, 1)
	.toLocaleString("default", {
		month: "long",
	})
	.toLowerCase()
---

<EntryListLayout
	preposition="from"
	matching={monthName + " " + year}
	page={Astro.props.page}
/>
