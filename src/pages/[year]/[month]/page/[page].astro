---
import type {GetStaticPathsOptions} from "astro"
import getEntries, {byRecency} from "../../../../entries.ts"
import EntryListLayout from "../../../../layouts/entry-list-layout.astro"

export async function getStaticPaths({paginate}: GetStaticPathsOptions) {
	const entries = (await getEntries()).toSorted(byRecency)
	const yearByMonth = entries.reduce(
		(a, b) => {
			const date = b.data.date
			const year = date.getFullYear()
			const month = date.getMonth() + 1
			a[year] ||= []
			if (!a[year].includes(month)) {
				a[year].push(month)
			}
			return a
		},
		{} as {[year: number]: number[]}
	)
	return Object.entries(yearByMonth).flatMap(([a, months]) => {
		const year = +a
		return months.flatMap(month => {
			const filtered = entries.filter(entry => {
				return (
					entry.data.date.getMonth() + 1 === month &&
					entry.data.date.getFullYear() == year
				)
			})
			return paginate(filtered, {
				params: {
					year: year.toString(),
					month: month.toString(),
				},
				pageSize: 10,
			})
		})
	})
}

const {page, year, month} = Astro.props
const params = Astro.params
const monthName = new Date(2001, +params.month - 1, 1)
	.toLocaleString("default", {
		month: "long",
	})
	.toLowerCase()
---

<EntryListLayout
	title=`entries from ${monthName} ${params.year} | 🍒`
	description=`entries from ${monthName} ${params.year} (page ${page.currentPage})}`
	page={page}
>
	<Fragment slot="after-header">
		<header>
			<h1>
				<span class="month">{monthName}</span>
				<span class="year">{params.year}</span>
			</h1>
		</header>
	</Fragment>
</EntryListLayout>

<style>
	h1,
	p {
		margin: 0;
	}

	h1 {
		font-weight: 350;
		width: 100%;
	}

	header {
		max-width: var(--reading-width);
		margin: auto;
		display: flex;
		place-items: top;
		background: white;
		width: 100%;
		padding: 1rem;
		text-align: center;
		border-radius: 8px;
		border: 8px double rgba(200, 0, 255, 0.2);
	}

	.month,
	.year {
		font-weight: 444;
	}

	.page {
		color: #96a;
	}
</style>
