---
import CommonHead from "../../components/head/common-head.astro"
import {type CollectionEntry} from "astro:content"
import getEntries from "../../entries.ts"
import {stripHtml as stripHTML} from "string-strip-html"

export async function getStaticPaths() {
	const entries = await getEntries()
	return entries.map(post => ({
		params: {slug: post.id},
		props: post,
	}))
}

type Props = CollectionEntry<EntryCollectionName>

const post = Astro.props

function getOpengraphTitle(post: Record<string, any>) {
	if (post?.data?.og?.title) {
		return post.data.og.title
	} else if (post?.data?.titleHTML) {
		return post.data.titleHTML
	} else if (post?.data?.title) {
		return post?.data?.title
	} else {
		try {
			let text = stripHTML(post.body ?? "").result
			return text.split(".")[0]
		} catch {
			return post?.data?.description || "it's cherries season"
		}
	}
}
import background from "../../opengraph/background.jpg"
---

<CommonHead title="opengraph" />

<style>
	main {
		display: flex;
		width: 1200px;
		height: 630px;
		background-size: 1200px 630px;
		font-family: ITC Garamond STD Book Narrow;
	}

	h1 {
		background: linear-gradient(
			to bottom right,
			#fff0f9,
			#fffef1,
			rgb(241, 255, 246),
			#f0f9ff,
			#f9fdff,
			#f6fdff,
			#fff3f9
		);
		background-clip: text;
		color: transparent;
		text-overflow: ellipses;
		font-size: 9em;
		width: 900px;
		padding-left: 0.25em;
		padding-top: 0.125em;
	}
</style>

<main class="main" style=`background-image: url(${background.src});`>
	<h1>{getOpengraphTitle(post)}</h1>
</main>
